##############################################################################
# maali cygnet file for gromacs
##############################################################################

read -r -d '' MAALI_MODULE_WHATIS << EOF

GROMACS is a versatile package to perform molecular dynamics, i.e. simulate the
Newtonian equations of motion for systems with hundreds to millions of
particles.

It is primarily designed for biochemical molecules like proteins, lipids and
nucleic acids that have a lot of complicated bonded interactions, but since
GROMACS is extremely fast at calculating the nonbonded interactions (that
usually dominate simulations) many groups are also using it for research on
non-biological systems, e.g. polymers.

For further information see http://www.gromacs.org/

EOF

# specify which compilers we want to build the tool with
#MAALI_TOOL_COMPILERS="$MAALI_DEFAULT_SYSTEM_GCC"
MAALI_TOOL_COMPILERS="gcc/5.4.0"
#MAALI_TOOL_COMPILERS="$MAALI_DEFAULT_GCC_COMPILERS"

# specify which cuda versions we want to build the tool with
MAALI_TOOL_CUDA_COMPILERS="$MAALI_DEFAULT_CUDA_COMPILERS"

#MAALI_TOOL_CPU_TARGET="$MAALI_DEFAULT_TOOL_CPU_TARGET"
MAALI_TOOL_CPU_TARGET="knl"

# URL to download the source code from
MAALI_URL="ftp://ftp.gromacs.org/pub/gromacs/$MAALI_TOOL_NAME-$MAALI_TOOL_VERSION.tar.gz"

# location we are downloading the source code to
MAALI_DST="$MAALI_SRC/$MAALI_TOOL_NAME-$MAALI_TOOL_VERSION.tar.gz"

# where the unpacked source code is located
MAALI_TOOL_BUILD_DIR="$MAALI_BUILD_DIR/$MAALI_TOOL_NAME-$MAALI_TOOL_VERSION"

# type of tool (eg. apps, devel, python, etc.)
MAALI_TOOL_TYPE="apps"

# tool pre-requisites
MAALI_TOOL_PREREQ="$MAALI_DEFAULT_MPI fftw/3.3.5 boost/1.64.0 lapack/3.7.0"

# supports building CUDA version
MAALI_CUDA_SUPPORT=1

MAALI_CMAKE_TOOL=1

if [ $MAALI_CUDA_BUILD -eq 1 ]; then
# No KNL-gpu build
  MAALI_TOOL_CPU_TARGET="sandybridge broadwell"
fi

# additional configure options
MAALI_TOOL_CONFIGURE='-DBUILD_SHARED_LIBS=on -DGMX_FFT_LIBRARY=fftw3 -DFFTWF_INCLUDE_DIR=$FFTW_INCLUDE  -DCMAKE_PREFIX_PATH=$MAALI_FFTW_HOME -DFFTW3_LIBRARIES=$FFTW_LIB -DFFTW3F_LIBRARIES=$FFTW_LIB -DFFTW3F_INCLUDE_DIR=$FFTW_INCLUDE -DFFTW3_INCLUDE_DIR=$FFTW_INCLUDE  -DGMX_BUILD_UNITTESTS=OFF'
if [ $MAALI_CUDA_BUILD -eq 1 ]; then
MAALI_TOOL_CONFIGURE+=' -DGMX_GPU=ON'
else
MAALI_TOOL_CONFIGURE+=' -DGMX_GPU=OFF'
fi
MAALI_TOOL_CONFIGURE+=' -DCMAKE_EXE_LINKER_FLAGS=-Wl,--unresolved-symbols=ignore-in-shared-libs'
#MAALI_TOOL_CONFIGURE+=' -DCMAKE_SHARED_LINKER_FLAGS='


# for auto-building module files
MAALI_MODULE_SET_PATH=1
MAALI_MODULE_SET_MANPATH=1
MAALI_MODULE_SET_GMXLIB='$MAALI_APP_HOME/share/gromacs/top'
MAALI_MODULE_SET_GMXBIN='$MAALI_APP_HOME/bin'
MAALI_MODULE_SET_GMXDATA='$MAALI_APP_HOME/share/gromacs'
MAALI_MODULE_SET_GMXMAN='$MAALI_APP_HOME/share/man'
MAALI_MODULE_SET_PKG_CONFIG_PATH=1

# Gromacs library path changed from version 5
if [ $MAALI_TOOL_MAJOR_VERSION -le 4 ]; then
  LIB=lib
  MAALI_MODULE_SET_GMXLDLIB='$MAALI_APP_HOME/"$LIB"'
  MAALI_MODULE_SET_LD_LIBRARY_PATH=1                                                                                                                     
elif [ $MAALI_TOOL_MAJOR_VERSION -ge 5 ]; then
  LIB=lib64
  MAALI_MODULE_SET_GMXLDLIB='$MAALI_APP_HOME/"$LIB"'
  MAALI_MODULE_SET_LD_LIBRARY_PATH="$LIB"
fi

##############################################################################
function maali_pre_build {
  # see bug http://redmine.gromacs.org/issues/1848
  # and bug fix http://redmine.gromacs.org/projects/gromacs/repository/revisions/318ed3bb35b5e54aa71ed14600a17d35ede7a92c
  # this only appears in 5.1.1; versions 5.0.5 and 5.1.2 are fine
  if [ $MAALI_TOOL_VERSION == 5.1.1 ]; then
    sed -i -e 's/gmx_bcast(eglsNR\*sizeof(gs->mpiBuffer), gs->mpiBuffer, cr);/gmx_bcast(eglsNR*sizeof(gs->mpiBuffer[0]), gs->mpiBuffer, cr);/g' $MAALI_TOOL_BUILD_DIR/src/gromacs/mdlib/mdrun_signalling.cpp
  fi

  if [ $MAALI_TOOL_VERSION \> 5.0.0 ]; then
    #MPT has defined a macro called UNDEFINED so gromacs is not happy about that
    sed -i -e 's;#define UNDEFINED       "UNDEFINED";#define GMX_UNDEFINED       "UNDEFINED";g' $MAALI_TOOL_BUILD_DIR/src/gromacs/legacyheaders/names.h
    sed -i -e 's;UNDEFINED :;GMX_UNDEFINED :;g' $MAALI_TOOL_BUILD_DIR/src/gromacs/legacyheaders/names.h

    #turn off C++ bindings in MPT
    sed -i -e '/#define OMPI_SKIP_MPICXX 1/a \#define MPI_NO_CPPBIND 1' $MAALI_TOOL_BUILD_DIR/src/gromacs/utility/gmxmpi.h
  fi

}

function maali_cmake_build {

  # allows late evaluation
  MAALI_TOOL_CONFIGURE_EVAL=`eval echo "$MAALI_TOOL_CONFIGURE"`

  # Only use AVX2_256 hardware acceleration when appropriate
  if [ $MAALI_TOOL_MAJOR_VERSION -ge 5 ]; then
    if [ ${CPU_TARGET} == "broadwell" ]; then
      MAALI_TOOL_CONFIGURE_EVAL="$MAALI_TOOL_CONFIGURE_EVAL -DGMX_SIMD=AVX2_256"
    elif [ ${CPU_TARGET} == "haswell" ]; then
      MAALI_TOOL_CONFIGURE_EVAL="$MAALI_TOOL_CONFIGURE_EVAL -DGMX_SIMD=AVX2_256"
    elif [ ${CPU_TARGET} == "knl" ]; then
      MAALI_TOOL_CONFIGURE_EVAL="$MAALI_TOOL_CONFIGURE_EVAL -DGMX_SIMD=AVX_512_KNL -DGMX_OPENMP_MAX_THREADS=256"
      if [ "$MAALI_COMPILER_NAME" == "intel" ]; then
        FLAGS="-std=c11 -xMIC-AVX512 -O3 -static-intel -align -fma -ftz -fomit-frame-pointer -finline-functions"; export CFLAGS=$FLAGS CXXFLAGS=$FLAGS
      elif [ "$MAALI_COMPILER_NAME" == "gcc" ]; then
        FLAGS="-std=c11 -march=knl -O3"; export CFLAGS="-std=c11 $FLAGS" CXXFLAGS="-std=c++11 $FLAGS"
      fi

    else
      MAALI_TOOL_CONFIGURE_EVAL="$MAALI_TOOL_CONFIGURE_EVAL -DGMX_SIMD=AVX_256"
    fi
  fi

  # 2016 seems to fail about the Google test framework gtest.h
  if [[ $MAALI_TOOL_MAJOR_VERSION == 2016 ]]; then
    MAALI_TOOL_CONFIGURE_EVAL="$MAALI_TOOL_CONFIGURE_EVAL -DBUILD_TESTING=OFF"
  fi

  export MPI_FLAGS='-DGMX_MPI=ON'
  export DOUBLE_FLAGS='-DGMX_DOUBLE=ON'

  export MPI_FLAGS='-DGMX_MPI=ON'
  export DOUBLE_MPI_FLAGS='-DGMX_MPI=ON -DGMX_DOUBLE=ON'

  if [[ $MAALI_TOOL_MAJOR_VERSION -ge 5 ]]; then
    export MPI_FLAGS='-DGMX_BUILD_MDRUN_ONLY=ON -DGMX_MPI=ON'
    export DOUBLE_MPI_FLAGS='-DGMX_BUILD_MDRUN_ONLY=ON -DGMX_MPI=ON -DGMX_DOUBLE=ON'
  fi

  # cpu build of gromacs
  if [ $MAALI_CUDA_BUILD -eq 0 ]; then

    # cmake likes to build in a directory of it's own.  single-precision, no MPI
    maali_makedir "$MAALI_TOOL_BUILD_DIR/$MAALI_TOOL_NAME-build"
    cd "$MAALI_TOOL_BUILD_DIR/$MAALI_TOOL_NAME-build"
    maali_run "cmake -DCMAKE_INSTALL_PREFIX=$MAALI_INSTALL_DIR $MAALI_TOOL_CONFIGURE_EVAL $MAALI_CMAKE_PATH"
    if [ $DEBUG ]; then
      maali_run "make -j $MAALI_CORES VERBOSE=TRUE"
    else
      maali_run "make -j $MAALI_CORES "
    fi
    maali_run "make install"

    # cmake likes to build in a directory of it's own. double-precision, no MPI
    maali_makedir "$MAALI_TOOL_BUILD_DIR/$MAALI_TOOL_NAME-double"
    cd "$MAALI_TOOL_BUILD_DIR/$MAALI_TOOL_NAME-double"
    maali_run "cmake ${DOUBLE_FLAGS} -DCMAKE_INSTALL_PREFIX=$MAALI_INSTALL_DIR $MAALI_TOOL_CONFIGURE_EVAL $MAALI_CMAKE_PATH"
    if [ $DEBUG ]; then
      maali_run "make -j $MAALI_CORES  VERBOSE=TRUE"
    else
      maali_run "make -j $MAALI_CORES "
    fi
    maali_run "make install"

    # cmake likes to build in a directory of it's own.  single-precision, MPI
    maali_makedir "$MAALI_TOOL_BUILD_DIR/$MAALI_TOOL_NAME-build-mpi"
    cd "$MAALI_TOOL_BUILD_DIR/$MAALI_TOOL_NAME-build-mpi"
    maali_run "cmake ${MPI_FLAGS} -DCMAKE_INSTALL_PREFIX=$MAALI_INSTALL_DIR $MAALI_TOOL_CONFIGURE_EVAL $MAALI_CMAKE_PATH"
    if [ $DEBUG ]; then
      maali_run "make -j $MAALI_CORES  VERBOSE=TRUE"
    else
      maali_run "make -j $MAALI_CORES "
    fi
    maali_run "make install"

    # cmake likes to build in a directory of it's own. double-precision, MPI
    maali_makedir "$MAALI_TOOL_BUILD_DIR/$MAALI_TOOL_NAME-double-mpi"
    cd "$MAALI_TOOL_BUILD_DIR/$MAALI_TOOL_NAME-double-mpi"
    maali_run "cmake ${MPI_FLAGS} ${DOUBLE_FLAGS} -DCMAKE_INSTALL_PREFIX=$MAALI_INSTALL_DIR $MAALI_TOOL_CONFIGURE_EVAL $MAALI_CMAKE_PATH"
    if [ $DEBUG ]; then
      maali_run "make -j $MAALI_CORES  VERBOSE=TRUE"
    else
      maali_run "make -j $MAALI_CORES "
    fi
    maali_run "make install"

  else
    # gpu build of gromacs when maali is invoked with -n 
    # cmake likes to build in a directory of it's own.  single-precision, no MPI
    maali_makedir "$MAALI_TOOL_BUILD_DIR/$MAALI_TOOL_NAME-build"
    cd "$MAALI_TOOL_BUILD_DIR/$MAALI_TOOL_NAME-build"
    maali_run "cmake -DCMAKE_INSTALL_PREFIX=$MAALI_INSTALL_DIR $MAALI_TOOL_CONFIGURE_EVAL -DGMX_DEFAULT_SUFFIX=OFF -DGMX_BINARY_SUFFIX=\"_cuda\" -DGMX_LIBS_SUFFIX=\"_cuda\" $MAALI_CMAKE_PATH"
    if [ $DEBUG ]; then
      maali_run "make -j $MAALI_CORES VERBOSE=TRUE"
    else
      maali_run "make -j $MAALI_CORES "
    fi
    maali_run "make install"

  fi

}

##############################################################################
